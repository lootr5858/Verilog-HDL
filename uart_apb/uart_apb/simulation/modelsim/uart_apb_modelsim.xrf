vendor_name = ModelSim
source_file = 1, D:/Verilog/uart_apb/apb_rx/apb_rx_dp.v
source_file = 1, D:/Verilog/uart_apb/apb_rx/apb_rx_cp.v
source_file = 1, D:/Verilog/uart_apb/apb_rx/apb_rx.v
source_file = 1, D:/Verilog/uart_apb/apb_tx/apb_tx_dp.v
source_file = 1, D:/Verilog/uart_apb/apb_tx/apb_tx_cp.v
source_file = 1, D:/Verilog/uart_apb/apb_tx/apb_tx.v
source_file = 1, D:/Verilog/aESSENTIALS/REGISTER.v
source_file = 1, D:/Verilog/aESSENTIALS/MUX.v
source_file = 1, D:/Verilog/aESSENTIALS/baud_counter.v
source_file = 1, D:/Verilog/uart_apb/uart_apb/uart_apb.v
source_file = 1, D:/Verilog/uart_apb/uart_apb/uart_apb_cp.v
source_file = 1, D:/Verilog/uart_apb/uart_apb/uart_apb_dp.v
source_file = 1, D:/Verilog/uart_apb/uart_apb/uart_tb.v
source_file = 1, D:/Verilog/uart_apb/uart_apb/db/uart_apb.cbx.xml
design_name = uart_apb
instance = comp, \read_data[0]~output , read_data[0]~output, uart_apb, 1
instance = comp, \read_data[1]~output , read_data[1]~output, uart_apb, 1
instance = comp, \read_data[2]~output , read_data[2]~output, uart_apb, 1
instance = comp, \read_data[3]~output , read_data[3]~output, uart_apb, 1
instance = comp, \read_data[4]~output , read_data[4]~output, uart_apb, 1
instance = comp, \read_data[5]~output , read_data[5]~output, uart_apb, 1
instance = comp, \read_data[6]~output , read_data[6]~output, uart_apb, 1
instance = comp, \read_data[7]~output , read_data[7]~output, uart_apb, 1
instance = comp, \read_data[8]~output , read_data[8]~output, uart_apb, 1
instance = comp, \read_data[9]~output , read_data[9]~output, uart_apb, 1
instance = comp, \read_data[10]~output , read_data[10]~output, uart_apb, 1
instance = comp, \read_data[11]~output , read_data[11]~output, uart_apb, 1
instance = comp, \read_data[12]~output , read_data[12]~output, uart_apb, 1
instance = comp, \read_data[13]~output , read_data[13]~output, uart_apb, 1
instance = comp, \read_data[14]~output , read_data[14]~output, uart_apb, 1
instance = comp, \read_data[15]~output , read_data[15]~output, uart_apb, 1
instance = comp, \read_data[16]~output , read_data[16]~output, uart_apb, 1
instance = comp, \read_data[17]~output , read_data[17]~output, uart_apb, 1
instance = comp, \read_data[18]~output , read_data[18]~output, uart_apb, 1
instance = comp, \read_data[19]~output , read_data[19]~output, uart_apb, 1
instance = comp, \read_data[20]~output , read_data[20]~output, uart_apb, 1
instance = comp, \read_data[21]~output , read_data[21]~output, uart_apb, 1
instance = comp, \read_data[22]~output , read_data[22]~output, uart_apb, 1
instance = comp, \read_data[23]~output , read_data[23]~output, uart_apb, 1
instance = comp, \read_data[24]~output , read_data[24]~output, uart_apb, 1
instance = comp, \read_data[25]~output , read_data[25]~output, uart_apb, 1
instance = comp, \read_data[26]~output , read_data[26]~output, uart_apb, 1
instance = comp, \read_data[27]~output , read_data[27]~output, uart_apb, 1
instance = comp, \read_data[28]~output , read_data[28]~output, uart_apb, 1
instance = comp, \read_data[29]~output , read_data[29]~output, uart_apb, 1
instance = comp, \read_data[30]~output , read_data[30]~output, uart_apb, 1
instance = comp, \read_data[31]~output , read_data[31]~output, uart_apb, 1
instance = comp, \ready~output , ready~output, uart_apb, 1
instance = comp, \tx_en~output , tx_en~output, uart_apb, 1
instance = comp, \tx_out~output , tx_out~output, uart_apb, 1
instance = comp, \rx_en~output , rx_en~output, uart_apb, 1
instance = comp, \sel~input , sel~input, uart_apb, 1
instance = comp, \en~input , en~input, uart_apb, 1
instance = comp, \rstn~input , rstn~input, uart_apb, 1
instance = comp, \cp|ready~0 , cp|ready~0, uart_apb, 1
instance = comp, \addr[5]~input , addr[5]~input, uart_apb, 1
instance = comp, \addr[11]~input , addr[11]~input, uart_apb, 1
instance = comp, \addr[4]~input , addr[4]~input, uart_apb, 1
instance = comp, \addr[6]~input , addr[6]~input, uart_apb, 1
instance = comp, \cp|always0~1 , cp|always0~1, uart_apb, 1
instance = comp, \addr[2]~input , addr[2]~input, uart_apb, 1
instance = comp, \addr[3]~input , addr[3]~input, uart_apb, 1
instance = comp, \addr[8]~input , addr[8]~input, uart_apb, 1
instance = comp, \addr[7]~input , addr[7]~input, uart_apb, 1
instance = comp, \addr[9]~input , addr[9]~input, uart_apb, 1
instance = comp, \cp|always0~0 , cp|always0~0, uart_apb, 1
instance = comp, \addr[10]~input , addr[10]~input, uart_apb, 1
instance = comp, \cp|always0~2 , cp|always0~2, uart_apb, 1
instance = comp, \cp|ready , cp|ready, uart_apb, 1
instance = comp, \clk~input , clk~input, uart_apb, 1
instance = comp, \write_control~input , write_control~input, uart_apb, 1
instance = comp, \write_data[0]~input , write_data[0]~input, uart_apb, 1
instance = comp, \write_data[1]~input , write_data[1]~input, uart_apb, 1
instance = comp, \write_data[2]~input , write_data[2]~input, uart_apb, 1
instance = comp, \write_data[3]~input , write_data[3]~input, uart_apb, 1
instance = comp, \write_data[4]~input , write_data[4]~input, uart_apb, 1
instance = comp, \write_data[5]~input , write_data[5]~input, uart_apb, 1
instance = comp, \write_data[6]~input , write_data[6]~input, uart_apb, 1
instance = comp, \write_data[7]~input , write_data[7]~input, uart_apb, 1
instance = comp, \write_data[8]~input , write_data[8]~input, uart_apb, 1
instance = comp, \write_data[9]~input , write_data[9]~input, uart_apb, 1
instance = comp, \write_data[10]~input , write_data[10]~input, uart_apb, 1
instance = comp, \write_data[11]~input , write_data[11]~input, uart_apb, 1
instance = comp, \write_data[12]~input , write_data[12]~input, uart_apb, 1
instance = comp, \write_data[13]~input , write_data[13]~input, uart_apb, 1
instance = comp, \write_data[14]~input , write_data[14]~input, uart_apb, 1
instance = comp, \write_data[15]~input , write_data[15]~input, uart_apb, 1
instance = comp, \write_data[16]~input , write_data[16]~input, uart_apb, 1
instance = comp, \write_data[17]~input , write_data[17]~input, uart_apb, 1
instance = comp, \write_data[18]~input , write_data[18]~input, uart_apb, 1
instance = comp, \write_data[19]~input , write_data[19]~input, uart_apb, 1
instance = comp, \write_data[20]~input , write_data[20]~input, uart_apb, 1
instance = comp, \write_data[21]~input , write_data[21]~input, uart_apb, 1
instance = comp, \write_data[22]~input , write_data[22]~input, uart_apb, 1
instance = comp, \write_data[23]~input , write_data[23]~input, uart_apb, 1
instance = comp, \write_data[24]~input , write_data[24]~input, uart_apb, 1
instance = comp, \write_data[25]~input , write_data[25]~input, uart_apb, 1
instance = comp, \write_data[26]~input , write_data[26]~input, uart_apb, 1
instance = comp, \write_data[27]~input , write_data[27]~input, uart_apb, 1
instance = comp, \write_data[28]~input , write_data[28]~input, uart_apb, 1
instance = comp, \write_data[29]~input , write_data[29]~input, uart_apb, 1
instance = comp, \write_data[30]~input , write_data[30]~input, uart_apb, 1
instance = comp, \write_data[31]~input , write_data[31]~input, uart_apb, 1
instance = comp, \rx_in~input , rx_in~input, uart_apb, 1
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, uart_apb, 1
